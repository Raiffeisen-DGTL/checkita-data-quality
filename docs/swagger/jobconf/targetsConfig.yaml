description: |-
  Targets provide alternative channels for sending results, notifications, and alerts. They include result targets, error collection targets, 
  summary targets, and check alert targets. Each target type can save or send data to different destinations like file systems, Hive, Kafka, email, 
  and Mattermost.
type: object
properties:
  results:
    type: object
    description: |-
      Result targets are used to save results as file, store them to Hive or send to Kafka topic 
      in addition to storing into Data Quality storage.
    properties:
      file:
        allOf:
          - description: Save results as file in local or remote (HDFS, S3, etc.) file system.
          - $ref: 'targets/fileTargetConfig.yaml'
          - $ref: 'targets/resultTypesConfig.yaml'
      hive:
        allOf:
          - description: |-
              Save results in HDFS as Hive table. 
              Note that Hive table with required schema must be created prior results saving.
          - $ref: 'targets/hiveTargetConfig.yaml'
          - $ref: 'targets/resultTypesConfig.yaml'      
      kafka:
        allOf:
          - description: Send results to Kafka topic in JSON format.
          - $ref: 'targets/kafkaTargetConfig.yaml'
          - $ref: 'targets/resultTypesConfig.yaml'
  errorCollection:
    type: object
    description: |-
      Error collection targets are used to save collected metric errors as file store them to Hive 
      or send to Kafka topic. used to save collected metric errors as file store them to Hive or send to Kafka topic.
    properties:
      file:
        allOf:
          - description: Save metric errors as file in local or remote (HDFS, S3, etc.) file system.
          - $ref: 'targets/fileTargetConfig.yaml'
          - $ref: 'targets/errorCollectionConfig.yaml'
      hive:
        allOf:
          - description: |-
              Save metric errors in HDFS as Hive table. 
              Note that Hive table with required schema must be created prior metric errors saving.
          - $ref: 'targets/hiveTargetConfig.yaml'
          - $ref: 'targets/errorCollectionConfig.yaml'
      kafka:
        allOf:
          - description: Send metric errors to Kafka topic in JSON format.
          - $ref: 'targets/kafkaTargetConfig.yaml'
          - $ref: 'targets/errorCollectionConfig.yaml'
  summary:
    type: object
    description: |-
      Summary targets are used to send notifications with summary report for Data Quality job.
      Summary report may also be sent to Kafka topic.
      
      Checkita framework collects summary upon completion of each Data Quality job. 
      Summary targets are designed accordingly, to enable sending summary reports to users. 
      
      Summary reports sent via email or mattermost can be customized with use of Mustache templates.
      If template is not provided then the default summary report body is compiled. 
      Moreover, it should be noted, that `template` parameter has higher priority than `templateFile` one. 
      Therefore, if both of them are set then explicitly defined template from `template` parameter is used.
    properties: 
      email:
        allOf:
          - description: Send summary report to user(s) via email.
          - $ref: 'targets/emailTargetConfig.yaml'
          - $ref: 'targets/summaryConfig.yaml'
      mattermost:
        allOf:
          - description: Send summary report to mattermost either to channel or to user's direct messages.
          - $ref: 'targets/mattermostTargetConfig.yaml'
          - $ref: 'targets/summaryConfig.yaml'
      kafka:
        allOf:
          - description: Send summary report to Kafka topic in JSON format.
          - $ref: 'targets/kafkaTargetConfig.yaml'
  checkAlert:
    type: object
    description: |-
      Check alert targets used to watch over some checks and send notification to users in case if
      some watched checks have failed.
      
      Check alert reports can be customized with use of Mustache templates.
      If template is not provided then the default summary report body is compiled. 
      Moreover, it should be noted, that `template` parameter has higher priority than `templateFile` one. 
      Therefore, if both of them are set then explicitly defined template from `template` parameter is used.
    properties: 
      email:
        type: array
        description: Send check alert to user(s) via email.
        items:
          allOf:
            - $ref: 'targets/emailTargetConfig.yaml'
            - $ref: 'targets/checkAlertConfig.yaml'
      mattermost:
        type: array
        description: Send check alert to mattermost either to channel or to user's direct messages.
        items:
          allOf:
            - $ref: 'targets/mattermostTargetConfig.yaml'
            - $ref: 'targets/checkAlertConfig.yaml'