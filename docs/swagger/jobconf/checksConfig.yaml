description: |-
  Performing checks over the metric results is an important step in Checkita framework. As metric results 
  are calculated then checks can be configured to identify if there are any problems with the quality of data.
    
  ***IMPORTANT: Trend checks are scheduled for deprecation in Checkita 3.0 release as their functionality is now
  covered (and also enhanced) by trend metrics.***
type: object
properties:
  snapshot:
    type: object
    description: Snapshot checks represent a simple comparison of metric results with a static threshold or with other metric result.
    properties:
      equalTo:
        type: array
        description: |-
          Checks if metric results is equal to a given threshold value or to other metric result.
          When configuring check it should be specified either an explicit threshold value in `threshold` field
          or other metric ID in `compareMetric` field which result will be used as a threshold value.
        items:
          allOf:
            - $ref: 'checks/baseChecksConfig.yaml'
            - $ref: 'checks/snapshotCheckConfig.yaml'
      lessThan:
        type: array
        description: |-
          Checks if metric results less than a given threshold value or other metric result.
          When configuring check it should be specified either an explicit threshold value in `threshold` field
          or other metric ID in `compareMetric` field which result will be used as a threshold value.
        items:
          allOf:
            - $ref: 'checks/baseChecksConfig.yaml'
            - $ref: 'checks/snapshotCheckConfig.yaml'
      greaterThan:
        type: array
        description: |-
          Checks if metric results greater than a given threshold value or other metric result.
          When configuring check it should be specified either an explicit threshold value in `threshold` field
          or other metric ID in `compareMetric` field which result will be used as a threshold value.
        items:
          allOf:
            - $ref: 'checks/baseChecksConfig.yaml'
            - $ref: 'checks/snapshotCheckConfig.yaml'
      differByLT:
        type: array
        description: |-
          Checks if metric results greater than a given threshold value or other metric result.
          When configuring check it is required to specify both, `threshold` value and
          `compareMetric` to compare with.
        items:
          allOf:
            - $ref: 'checks/baseChecksConfig.yaml'
            - $ref: 'checks/snapshotCheckConfig.yaml'
  trend:
    type: object
    description: |-
      Trend checks are used to detect anomalies in data. This type of checks allows to verify that the value 
      of the metric corresponds to its average value within a given deviation for a certain period of time.
      Maximum allowed deviation is configured by providing a threshold value.
    properties:
      averageBoundFull:
        type: array
        description: |-
          Sets the same upper and lower deviation from metric average result. 
          Check succeeds when the following expression is true: 
          `(1 - threshold) * avgResult <= currentResult <= (1 + threshold) * avgResult`.
        items:
          allOf:
            - $ref: 'checks/baseChecksConfig.yaml'
            - $ref: 'checks/trendCheckConfig.yaml'
            - $ref: 'checks/trendCheckSingleThresholdConfig.yaml'
      averageBoundUpper:
        type: array
        description: |-
          Verifies only upper deviation from the metric average result.
          Check succeeds when the following expression is true: 
          `currentResult <= (1 + threshold) * avgResult`.
        items:
          allOf:
            - $ref: 'checks/baseChecksConfig.yaml'
            - $ref: 'checks/trendCheckConfig.yaml'
            - $ref: 'checks/trendCheckSingleThresholdConfig.yaml'
      averageBoundLower:
        type: array
        description: |-
          Verifies only lower deviation from the metric average result.
          Check succeeds when the following expression is true: 
          `(1 - threshold) * avgResult <= currentResult`.
        items:
          allOf:
            - $ref: 'checks/baseChecksConfig.yaml'
            - $ref: 'checks/trendCheckConfig.yaml'
            - $ref: 'checks/trendCheckSingleThresholdConfig.yaml'
      averageBoundRange:
        type: array
        description: |-
          Sets different thresholds for upper and lower deviations from metric average results.
          Check succeeds when the following expression is true: 
          `(1 - thresholdLower) * avgResult <= currentResult <= (1 + thresholdUpper) * avgResult`.
        items:
          allOf:
            - $ref: 'checks/baseChecksConfig.yaml'
            - $ref: 'checks/trendCheckConfig.yaml'
            - $ref: 'checks/trendCheckDoubleThresholdConfig.yaml'
      topNRankCheck:
        type: array
        description: |-
          This is a special check designed specifically for TopN metric and working only with it.
          Top N rank check calculates the Jacquard distance between the current and previous sets 
          of top N metric and checks if it does not exceed the threshold value.
        items:
          allOf:
            - $ref: 'checks/baseChecksConfig.yaml'
            - $ref: 'checks/topNCheckConfig.yaml'
  expression:
    type: array
    description: |-
      Expression checks represent a boolean expression referring to one or multiple metric results which evaluates to
      `true` or `false`. Metrics must be referenced by their IDs.
      
      Formula must be written using [Mustache Template](https://mustache.github.io/mustache.5.html) notation, e.g.:
      `{{ metric_1 }} + {{ metric_2 }}`.
      
      There are following operations supported to build boolean expressions:
  
        * Basic `+-*/` and exponentiation `^` math operations.
        * Grouping using parentheses.
        * Mathematical functions of single argument:
            `abs`, `sqrt`, `floor`, `ceil`, `round` (rounds to the closest integer), `ln` (natural logarithm), `lg` (decimal logarithm), `exp`.
        * Mathematical functions of two arguments: `max` and `min`.
        * Logical operators: `&&` (and), `||` (or), `not`.
        * Comparison operators: `==`, `<>`, `>=`, `<=`, `>`, `<`.
    items:
      allOf:
        - $ref: 'checks/baseChecksConfig.yaml'
        - $ref: 'checks/expressionCheckConfig.yaml'