openapi: 3.0.3
info:
  title: Checkita Data Quality - API Methods and Configuration Schemas
  description: |-
    This page provides Checkita Data Quality API server methods 
    and configuration schemas for both application configuration 
    and job configuration files.
  version: 2.0.0
servers:
  - url: http://127.0.0.1:8081/api
    description: local
tags:
  - name: configuration
    description: Endpoints used to validate application and job configurations
  - name: storage
    description: Endpoints used to fetch results from Checkita DQ Storage.
paths: 
  /validation/app-config/:
    post:
      tags:
        - configuration
      summary: Validate Checkita application configuration
      description: Posts application configuration for validation and returns response with validation result.
      requestBody:
        description: Application configuration to validate
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/ApplicationConfiguration'
      parameters:
        - name: extra-vars
          in: query
          description: List of additional variables to perpend to configuration prior parsing.
          required: false
          schema:
            type: string
            example: "DQ_CONN_USER,DQ_CONN_PASSWORD"
      responses:
        200:
          description: Valid configuration response.
          content:
            text/plain:
              schema:
                type: string
                example: Success. Configuration is valid.
        406:
          description: Validation error response.
          content: 
            text/plain:
              schema:
                type: string
                example: 'Unable to validate configuration due to following errors: <list of validation errors>.'
        400:
          description: Bad request in case when query parameters cannon be parsed.
          content: 
            text/plain:
              schema:
                type: string
                example: 'Unable to parse arguments: <list of argument parsing errors>.'
  /validation/job-config/:
    post:
      tags:
        - configuration
      summary: Validate Checkita job configuration
      description: Posts job configuration for validation and returns response with validation result.
      requestBody:
        description: Job configuration to validate
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/JobConfiguration'
      parameters:
        - name: extra-vars
          in: query
          description: List of additional variables to perpend to configuration prior parsing.
          required: false
          schema:
            type: string
            example: "DQ_CONN_USER,DQ_CONN_PASSWORD"
      responses:
        200:
          description: Valid configuration response.
          content:
            text/plain:
              schema:
                type: string
                example: Success. Configuration is valid.
        406:
          description: Validation error response.
          content:
            text/plain:
              schema:
                type: string
                example: 'Unable to validate configuration due to following errors: <list of validation errors>.'
        400:
          description: Bad request in case when query parameters cannon be parsed.
          content:
            text/plain:
              schema:
                type: string
                example: 'Unable to parse arguments: <list of argument parsing errors>.'
  /storage/info:
    post:
      tags:
        - storage
      summary: Data Quality Job Info
      requestBody:
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/Info'
      responses:
        200:
          description: Valid response.
          content:
            text/plain:
              schema:
                type: string
                example: Success. Got job info.
        500:
          description: Error response.
          content:
            text/plain:
              schema:
                type: string
                example: 'Unable to get jobs summary results due to following error: <list of argument parsing errors>.'
  /storage/state:
    post:
      tags:
        - storage
      summary: Data Quality Job State
      requestBody:
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/State'
      responses:
        200:
          description: Valid response.
          content:
            text/plain:
              schema:
                type: string
                example: Success. Got job state.
        500:
          description: Decryption error.
          content:
            text/plain:
              schema:
                type: string
                example: 'Unable to decrypt job state due to following error: <list of validation errors>.'
        404:
          description: Empty response. Query job state returned empty result.
          content:
            text/plain:
              schema:
                type: string
                example: No job state was found.
  /storage/results:
    post:
      tags:
        - storage
      summary: Data Quality Job Results
      requestBody:
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/Results'
      responses:
        200:
          description: Valid response.
          content:
            text/plain:
              schema:
                type: string
                example: Success. Got job results.
        500:
          description: Decryption error.
          content:
            text/plain:
              schema:
                type: string
                example: 'Unable to decrypt metric errors due to following error: <list of validation errors>.'
        404:
          description: Empty response. Query job results are empty.
          content:
            text/plain:
              schema:
                type: string
                example: No job result was found.
components:
  schemas:
    ApplicationConfiguration:
      $ref: 'appconf/topLevelAppConfig.yaml'
    JobConfiguration:
      $ref: 'jobconf/topLevelJobConfig.yaml'
    State:
      $ref: 'storageState/topLevelState.yaml'
    Results:
      $ref: 'storageResults/topLevelResults.yaml'
    Info:
      $ref: 'storageInfo/topLevelInfo.yaml'